diff --git a/source/include/ota_private.h b/source/include/ota_private.h
index 5640238..748d7f9 100644
--- a/source/include/ota_private.h
+++ b/source/include/ota_private.h
@@ -146,9 +146,9 @@
 #define OTA_JSON_SELF_TEST_KEY_ONLY     "self_test"                                                /*!< @brief Parameter to specify update status. Not searched in sub fields. */
 #define OTA_JSON_JOB_DOC_KEY            OTA_JSON_EXECUTION_KEY OTA_JSON_SEPARATOR "jobDocument"    /*!< @brief Parameters that specify the nature of the job. */
 #define OTA_JSON_OTA_UNIT_KEY           OTA_JSON_JOB_DOC_KEY OTA_JSON_SEPARATOR "afr_ota"          /*!< @brief afr-ota. */
-#define OTA_JSON_PROTOCOLS_KEY          OTA_JSON_OTA_UNIT_KEY OTA_JSON_SEPARATOR "protocols"       /*!< @brief Protocols over which the download can take place. */
-#define OTA_JSON_FILE_GROUP_KEY         OTA_JSON_OTA_UNIT_KEY OTA_JSON_SEPARATOR "files"           /*!< @brief Parameters for specifying file configurations. */
-#define OTA_JSON_STREAM_NAME_KEY        OTA_JSON_OTA_UNIT_KEY OTA_JSON_SEPARATOR "streamname"      /*!< @brief Name of the stream used for download. */
+#define OTA_JSON_PROTOCOLS_KEY          OTA_JSON_JOB_DOC_KEY OTA_JSON_SEPARATOR "protocols"       /*!< @brief Protocols over which the download can take place. */
+#define OTA_JSON_FILE_GROUP_KEY         OTA_JSON_JOB_DOC_KEY OTA_JSON_SEPARATOR "files"           /*!< @brief Parameters for specifying file configurations. */
+#define OTA_JSON_STREAM_NAME_KEY        OTA_JSON_JOB_DOC_KEY OTA_JSON_SEPARATOR "streamname"      /*!< @brief Name of the stream used for download. */
 #define OTA_JSON_FILE_PATH_KEY          "filepath"                                                 /*!< @brief Path to store the image on the device. */
 #define OTA_JSON_FILE_SIZE_KEY          "filesize"                                                 /*!< @brief Size of the file to be downloaded. */
 #define OTA_JSON_FILE_ID_KEY            "fileid"                                                   /*!< @brief Used to identify the file in case of multiple file downloads. */
diff --git a/source/ota.c b/source/ota.c
index ee8cc5e..8dc956c 100644
--- a/source/ota.c
+++ b/source/ota.c
@@ -615,13 +615,13 @@ static const JsonDocParam_t otaJobDocModelParamStructure[ OTA_NUM_JOB_PARAMS ] =
     { OTA_JSON_SELF_TEST_KEY,       OTA_JOB_PARAM_OPTIONAL, U16_OFFSET( OtaFileContext_t, isInSelfTest ),        OTA_DONT_STORE_PARAM, ModelParamTypeIdent},
     { OTA_JSON_UPDATED_BY_KEY,      OTA_JOB_PARAM_OPTIONAL, U16_OFFSET( OtaFileContext_t, updaterVersion ),      OTA_DONT_STORE_PARAM, ModelParamTypeUInt32},
     { OTA_JSON_JOB_DOC_KEY,         OTA_JOB_PARAM_REQUIRED, OTA_DONT_STORE_PARAM,         OTA_DONT_STORE_PARAM,  ModelParamTypeObject      },
-    { OTA_JSON_OTA_UNIT_KEY,        OTA_JOB_PARAM_REQUIRED, OTA_DONT_STORE_PARAM,         OTA_DONT_STORE_PARAM,  ModelParamTypeObject      },
+    { OTA_JSON_OTA_UNIT_KEY,        OTA_JOB_PARAM_OPTIONAL, OTA_DONT_STORE_PARAM,         OTA_DONT_STORE_PARAM,  ModelParamTypeObject      },
     { OTA_JSON_STREAM_NAME_KEY,     OTA_JOB_PARAM_OPTIONAL, U16_OFFSET( OtaFileContext_t, pStreamName ),         U16_OFFSET( OtaFileContext_t, streamNameMaxSize ), ModelParamTypeStringCopy},
     { OTA_JSON_PROTOCOLS_KEY,       OTA_JOB_PARAM_REQUIRED, U16_OFFSET( OtaFileContext_t, pProtocols ),          U16_OFFSET( OtaFileContext_t, protocolMaxSize ), ModelParamTypeArrayCopy},
     { OTA_JSON_FILE_GROUP_KEY,      OTA_JOB_PARAM_REQUIRED, OTA_STORE_NESTED_JSON,        OTA_STORE_NESTED_JSON, ModelParamTypeArray       },
     { OTA_JSON_FILE_PATH_KEY,       OTA_JOB_PARAM_OPTIONAL, U16_OFFSET( OtaFileContext_t, pFilePath ),           U16_OFFSET( OtaFileContext_t, filePathMaxSize ), ModelParamTypeStringCopy},
     { OTA_JSON_FILE_SIZE_KEY,       OTA_JOB_PARAM_REQUIRED, U16_OFFSET( OtaFileContext_t, fileSize ),            OTA_DONT_STORE_PARAM, ModelParamTypeUInt32},
-    { OTA_JSON_FILE_ID_KEY,         OTA_JOB_PARAM_REQUIRED, U16_OFFSET( OtaFileContext_t, serverFileID ),        OTA_DONT_STORE_PARAM, ModelParamTypeUInt32},
+    { OTA_JSON_FILE_ID_KEY,         OTA_JOB_PARAM_OPTIONAL, U16_OFFSET( OtaFileContext_t, serverFileID ),        OTA_DONT_STORE_PARAM, ModelParamTypeUInt32},
     { OTA_JSON_FILE_CERT_NAME_KEY,  OTA_JOB_PARAM_OPTIONAL, U16_OFFSET( OtaFileContext_t, pCertFilepath ),       U16_OFFSET( OtaFileContext_t, certFilePathMaxSize ), ModelParamTypeStringCopy},
     { OTA_JSON_UPDATE_DATA_URL_KEY, OTA_JOB_PARAM_OPTIONAL, U16_OFFSET( OtaFileContext_t, pUpdateUrlPath ),      U16_OFFSET( OtaFileContext_t, updateUrlMaxSize ), ModelParamTypeStringCopy},
     { OTA_JSON_AUTH_SCHEME_KEY,     OTA_JOB_PARAM_OPTIONAL, U16_OFFSET( OtaFileContext_t, pAuthScheme ),         U16_OFFSET( OtaFileContext_t, authSchemeMaxSize ), ModelParamTypeStringCopy},
@@ -667,6 +667,7 @@ static bool platformInSelftest( void )
 {
     bool selfTest = false;
 
+#if 0
     /*
      * Get the platform state from the OTA pal layer.
      */
@@ -674,6 +675,7 @@ static bool platformInSelftest( void )
     {
         selfTest = true;
     }
+#endif
 
     return selfTest;
 }
@@ -819,6 +821,7 @@ static OtaErr_t inSelfTestHandler( const OtaEventData_t * pEventData )
 
     LogInfo( ( "Beginning self-test." ) );
 
+#if 0
     /* Check the platform's OTA update image state. It should also be in self test. */
     if( platformInSelftest() == true )
     {
@@ -849,6 +852,7 @@ static OtaErr_t inSelfTestHandler( const OtaEventData_t * pEventData )
                     "OtaErr_t=%s",
                     OTA_Err_strerror( err ) ) );
     }
+#endif
 
     return err;
 }
@@ -1216,6 +1220,7 @@ static OtaErr_t processDataHandler( const OtaEventData_t * pEventData )
 
     if( result == IngestResultFileComplete )
     {
+#if 0
         /* Check if this is firmware update. */
         if( otaAgent.fileContext.fileType == configOTA_FIRMWARE_UPDATE_FILE_TYPE_ID )
         {
@@ -1225,6 +1230,7 @@ static OtaErr_t processDataHandler( const OtaEventData_t * pEventData )
             otaJobEvent = OtaJobEventActivate;
         }
         else
+#endif
         {
             jobDoc.status = JobStatusSucceeded;
             jobDoc.reason = ( int32_t ) JobReasonAccepted;
@@ -1818,7 +1824,7 @@ static DocParseErr_t parseJSONbyModel( const char * pJson,
     const char * pFileParams = NULL;
     uint32_t fileParamsLength = 0;
 
-    LogDebug( ( "JSON received: %s", pJson ) );
+    LogDebug( ( "JSON received: %.*s", messageLength, pJson ) );
 
     /* Fetch the model parameters from the DocModel*/
     pModelParam = pDocModel->pBodyDef;
